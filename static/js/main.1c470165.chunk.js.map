{"version":3,"sources":["Item.js","TodoForm.js","App.js","index.js","Item.module.css","App.module.css"],"names":["Item","title","completed","time","triggerTodo","removeTodo","className","styles","item","left","icon","onClick","CheckCircleOutlined","LoadingOutlined","style","textDecoration","CloseCircleOutlined","delete","TodoForm","addTodo","todos","setFilteredTodos","useState","value","setValue","onSubmit","event","preventDefault","placeholder","onChange","current","target","console","log","newTodos","filter","todo","includes","DEFAULT_TODOS","Date","now","App","localStorage","getItem","JSON","parse","loadTodosFromLocal","setTodos","filteredTodos","map","useEffect","setItem","stringify","saveTodosToLocal","page","container","list","key","ReactDOM","render","document","getElementById","module","exports"],"mappings":"mQASO,SAASA,EAAT,GAAoE,IAApDC,EAAmD,EAAnDA,MAAOC,EAA4C,EAA5CA,UAAWC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,WAC1D,OACE,yBAAKC,UAAWC,IAAOC,MACrB,0BAAMF,UAAWC,IAAOE,MACtB,yBAAKH,UAAWC,IAAOG,KAAMC,QAAS,kBAAMP,EAAYD,KACrDD,EAAY,kBAACU,EAAA,EAAD,MAA0B,kBAACC,EAAA,EAAD,OAEzC,0BAAMC,MAAO,CAAEC,eAAgBb,EAAY,eAAiB,SAAWD,IAEzE,kBAACe,EAAA,EAAD,CAAqBV,UAAWC,IAAOU,OAAQN,QAAS,kBAAMN,EAAWF,OChBxE,SAASe,EAAT,GAAyD,IAArCC,EAAoC,EAApCA,QAASC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,iBAAoB,EAEnCC,mBAAS,IAF0B,mBAEtDC,EAFsD,KAE/CC,EAF+C,KA8B7D,OACE,0BAAMC,SA3Ba,SAAAC,GACnBA,EAAMC,iBACNJ,GAASJ,EAAQI,GACjBC,EAAS,MAyBP,2BACElB,UAAU,QACVsB,YAAY,0CACZL,MAAOA,EACPM,SAZe,SAAAH,GACnB,IAAMI,EAAUJ,EAAMK,OAAOR,MAC7BC,EAASM,GAXI,SAAA7B,GAEb+B,QAAQC,IAAI,SAAUhC,GAEtB,IAAMiC,EAAWd,EAAMe,QAAO,SAAAC,GAAI,OAAIA,EAAKnC,MAAMoC,SAASpC,MAE1DoB,EAAiBa,GAMjBC,CAAOL,OChBX,IAAMQ,EAAgB,CACpB,CAAErC,MAAO,+DAAcC,WAAW,EAAOC,KAAMoC,KAAKC,OACpD,CAAEvC,MAAO,uCAAUC,WAAW,EAAMC,KAAMoC,KAAKC,MAAQ,IA2BlD,SAASC,IAAM,MAGMnB,mBAtB5B,WACE,IAAMF,EAAQsB,aAAaC,QAAQ,SACnC,OAAOvB,GAASwB,KAAKC,MAAMzB,GAoBQ0B,IAAwBR,GAHvC,mBAGblB,EAHa,KAGN2B,EAHM,OAKsBzB,mBAASF,GAL/B,mBAKb4B,EALa,KAKE3B,EALF,KAuBdjB,EAAc,SAAAD,GAAI,OAAI4C,EAC1B3B,EAAM6B,KAAI,SAAAb,GAER,OADAA,EAAKjC,OAASA,IAASiC,EAAKlC,WAAakC,EAAKlC,WACvCkC,OAWL/B,EAAa,SAAAF,GAAI,OAAI4C,EAAS3B,EAAMe,QAAO,SAAAC,GAAI,OAAIA,EAAKjC,OAASA,OAQvE,OALA+C,qBAAU,YA/CZ,SAA0B9B,GACxBsB,aAAaS,QAAQ,QAASP,KAAKQ,UAAUhC,IA+C3CiC,CAAiBjC,GACjBC,EAAiBD,KAChB,CAACA,IAGF,yBAAKd,UAAWC,IAAO+C,MACrB,yBAAKhD,UAAWC,IAAOgD,WACrB,kBAACrC,EAAD,CAAUC,QAlCA,SAAAlB,GAAK,OAAI8C,EAAS,CAAC,CAAE9C,QAAOC,WAAW,EAAOC,KAAMoC,KAAKC,QAAxC,mBAAoDpB,MAkCnDA,MAAOA,EAAOC,iBAAkBA,IAC5D,yBAAKf,UAAWC,IAAOiD,MAEnBR,EAAcC,KACZ,SAAAb,GAAI,OAAI,kBAACpC,EAAD,eAAMyD,IAAKrB,EAAKjC,KAAMC,YAAaA,EAAaC,WAAYA,GAAgB+B,UC1FlGsB,IAASC,OACP,kBAAClB,EAAD,MACAmB,SAASC,eAAe,U,kBCL1BC,EAAOC,QAAU,CAAC,KAAO,mBAAmB,KAAO,mBAAmB,KAAO,mBAAmB,OAAS,uB,kBCAzGD,EAAOC,QAAU,CAAC,KAAO,kBAAkB,UAAY,0B","file":"static/js/main.1c470165.chunk.js","sourcesContent":["import { CheckCircleOutlined, CloseCircleOutlined, LoadingOutlined } from '@ant-design/icons';\nimport React from 'react';\nimport styles from './Item.module.css';\n\n/**\n * 组件 `<Item>`\n * \n * @param {Todo & triggerTodo & removeTodo} { title, completed, time, triggerTodo, removeTodo }\n */\nexport function Item({ title, completed, time, triggerTodo, removeTodo }) {\n  return (\n    <div className={styles.item}>\n      <span className={styles.left}>\n        <div className={styles.icon} onClick={() => triggerTodo(time)}>\n          {completed ? <CheckCircleOutlined /> : <LoadingOutlined />}\n        </div>\n        <span style={{ textDecoration: completed ? 'line-through' : 'none' }}>{title}</span>\n      </span>\n      <CloseCircleOutlined className={styles.delete} onClick={() => removeTodo(time)} />\n    </div>\n  );\n}","import React, { useState } from 'react';\n\nexport function TodoForm({ addTodo, todos, setFilteredTodos }) {\n\n  const [value, setValue] = useState('');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    value && addTodo(value);\n    setValue('');\n  }\n\n  /**\n   * 筛选待办事项\n   *\n   * @param {string} title 待办事项的标题\n   */\n  const filter = title => {\n    // debug output\n    console.log('filter', title);\n    // 筛选包含输入框内容的待办事项\n    const newTodos = todos.filter(todo => todo.title.includes(title));\n    // 更新展示列表\n    setFilteredTodos(newTodos);\n  };\n\n  const handleChange = event => {\n    const current = event.target.value;\n    setValue(current);\n    filter(current);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        className=\"input\"\n        placeholder=\"创建待办事项...\"\n        value={value}\n        onChange={handleChange}\n      />\n    </form>\n  );\n\n}\n","import React, { useEffect, useState } from 'react';\nimport styles from './App.module.css';\nimport { Item } from './Item';\nimport { TodoForm } from './TodoForm';\n\n// Todo 的数据结构\n// interface Todo {\n//   title: string;\n//   completed: boolean;\n//   time: Date | number; // 为了便于存储\n// }\n\n/** 默认的待办事件列表 */\nconst DEFAULT_TODOS = [\n  { title: '尝试新增一件待办事项', completed: false, time: Date.now() },\n  { title: '已完成的事项', completed: true, time: Date.now() + 1 },\n];\n\n/**\n * 从 local storage 读取待办事件列表\n *\n * @returns {Todo[]} todos 返回待办事件列表\n */\nfunction loadTodosFromLocal() {\n  const todos = localStorage.getItem('todos');\n  return todos && JSON.parse(todos);\n}\n\n/**\n * 将待办事件列表存储到 local storage 中\n *\n * @param {Todo[]} todos 待办事件列表\n *\n * @returns {void} void\n */\nfunction saveTodosToLocal(todos) {\n  localStorage.setItem('todos', JSON.stringify(todos));\n}\n\n/**\n * 组件 App\n */\nexport function App() {\n\n  /** 待办事件列表 */\n  const [todos, setTodos] = useState(loadTodosFromLocal() || DEFAULT_TODOS);\n  /** 筛选后的事件列表 */\n  const [filteredTodos, setFilteredTodos] = useState(todos);\n\n  /**\n   * 新增待办事件, 绑定至 `<Item>` 组件上\n   *\n   * @param {string} title 待办事件的标题\n   *\n   * @returns {void} void\n   */\n  const addTodo = title => setTodos([{ title, completed: false, time: Date.now() }, ...todos]);\n\n  /**\n   * 更改指定的待办事件状态\n   *\n   * @param {number} time 待办事件添加的时间, 同时作为 key\n   *\n   * @returns {void} void\n   */\n  const triggerTodo = time => setTodos(\n    todos.map(todo => {\n      todo.time === time && (todo.completed = !todo.completed);\n      return todo;\n    })\n  );\n\n  /**\n   * 移除指定的待办事件\n   *\n   * @param {number} time 待办事件提交的时间\n   *\n   * @returns {void} void\n   */\n  const removeTodo = time => setTodos(todos.filter(todo => todo.time !== time));\n\n  // 当待办事件列表发生变动时, 自动存储至 local storage\n  useEffect(() => {\n    saveTodosToLocal(todos);\n    setFilteredTodos(todos);\n  }, [todos]);\n\n  return (\n    <div className={styles.page}>\n      <div className={styles.container}>\n        <TodoForm addTodo={addTodo} todos={todos} setFilteredTodos={setFilteredTodos} />\n        <div className={styles.list}>\n          {\n            filteredTodos.map(\n              todo => <Item key={todo.time} triggerTodo={triggerTodo} removeTodo={removeTodo} {...todo} />\n            )\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Item_item__3BUDq\",\"left\":\"Item_left__gn5fb\",\"icon\":\"Item_icon__1PmvH\",\"delete\":\"Item_delete__23WaT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"App_page__3vm_x\",\"container\":\"App_container__3pvvZ\"};"],"sourceRoot":""}